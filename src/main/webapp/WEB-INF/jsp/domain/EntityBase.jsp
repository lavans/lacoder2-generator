<!-- $Id: EntityBase.jsp 508 2012-09-20 14:41:55Z dobashi $ -->
<!doctype html public "-//w3c//dtd html 4.0 transitional//en"
   "http://www.w3.org/tr/rec-html40/loose.dtd">
<%@ page contentType="text/html; charset=UTF-8" %>
<%@ include file="../common/common.jsp" %>
<%@page import="java.util.*"%>
<%@ page import="java.text.*" %>
<%@ page import="com.lavans.lacoder2.generator.*" %>
<%@ page import="com.lavans.lacoder2.generator.model.*" %>
<%@ page import="com.lavans.lacoder2.generator.model.Package" %>
<%@ page import="com.lavans.lacoder2.generator.model.Entity" %>
<%@ page import="com.lavans.lacoder2.generator.model.Attribute" %>
<%@ page import="com.lavans.lacoder2.generator.main.*" %>
<%@ page import="com.lavans.lacoder2.generator.db.*" %>
<%@page import="com.lavans.lacoder2.lang.StringUtils"%>
<%@page import="com.lavans.lacoder2.generator.writer.ModelWriter"%>
<%!/**
	 * getParameter()とgetConditionParams()を一つに出来ないか？
	 */
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");%>
<%
	Package pkg = (Package)request.getAttribute("lacoder.package");
	Entity entity = (Entity)request.getAttribute("lacoder.entity");
	ModelWriter writer = new ModelWriter(entity);
	Attribute attrId = entity.get(0);
	TypeManager typeMan = entity.getTypeManager();
	String className = entity.getClassName();
%>
<html lang="ja">
<head>
<title>ソース</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<LINK href="red.css" rel="stylesheet" type="text/css">
</head>
<body text="#000000" leftmargin="10" topmargin="10" marginwidth="10" marginheight="10">
<pre>
/* $Id: EntityBase.jsp 508 2012-09-20 14:41:55Z dobashi $
 * 作成日: <%= sdf.format(new Date()) %>
 *
 */
package <%= pkg.getModelSubPackagePath() %>.entity.base;

import java.util.Map;
import java.util.HashMap;
import java.io.Serializable;
import com.lavans.lacoder2.util.Parameterizable;
<%= writer.writeImports() %>

/**
 * <%= entity.getTitle() %>Baseクラス。
 *
 * This is generated by lacoder.
 * You shoud not change this code. You should customize <%= className %>.java.
 * @see http://www.lavans.com/soft/lacoder/
 */
public class <%= className %>Base implements Parameterizable, Serializable, Cloneable{
	/** serialID */
	private static final long serialVersionUID = 1L;

	/**
	 * Constants definition.
	 */
<%= writer.writeConsts() %>
	/**
	 * Get attribute info
	 */
	public static Map&lt;String, Class&lt;?&gt;&gt; getAttributeInfo(){
		Map&lt;String, Class&lt;?&gt;&gt; map = new HashMap&lt;String, Class&lt;?&gt;&gt;();
<%= writer.writeGetAttributeInfo() %>
		return map;
	}

	// instance variables.
<%= writer.writeInstanceVars() %>

	/**
	 * Get Map&lt;String, String[]&gt; paramegters from Attributes for HTTP
	 */<%--	 @SuppressWarnings("unchecked") --%>
	public Map&lt;String, String[]&gt; getParameters() {
		return getParameters("");
	}
	@Override
	public Map&lt;String, String[]&gt; getParameters(String prefix) {
		Map&lt;String, String[]&gt; map = new HashMap&lt;String, String[]&gt;();
<%= writer.writeGetParameters() %>
		return map;
	}

	/**
	 * Set Attributes from Map&lt;String, String[]&gt; paramegters for HTTP
	 */
	public void setParameters(Map&lt;String, String[]&gt; map){
		setParameters(map, "");
	}
	public void setParameters(Map&lt;String, String[]&gt; map, String prefix){
<%= writer.writeSetParameters()
%>	}

	/**
	 * Get Map&lt;String, Object&gt; paramegters from Attributes for SQL
	 */<%--	 @SuppressWarnings("unchecked") --%>
	public Map&lt;String, Object&gt; getAttributeMap() {
		Map&lt;String, Object&gt; map = new HashMap&lt;String, Object&gt;();
<%= writer.writeGetAttributeMap() %>
		return map;
	}

	/**
	 * Clone method.
	 */
	public Object clone() throws CloneNotSupportedException{
		return super.clone();
	}

	// accessors
<%= writer.writeAccesssor()
%>	/**
	 * get primary key.
	 * @return
	 */
	public PK getPk(){
		return new PK(<%= writer.writePKConstructorCall() %>);
	}

	/**
	 * primary key class definition.
	 * @author dobashi
	 */
	public static class PK implements Parameterizable{
		private static final long serialVersionUID = 1L;

<%= writer.writeInstanceVarsPK() %>
		/**
		 * Constructor.
		 */
		public PK() {
		}
		/**
		 * Constructor.
		 */
		public PK(<%= writer.writePKConstructorArgs() %>) {
<%= writer.writePKSetter()
%>		}

		/**
		 * override Object#hashCode().
		 */
		@Override
		public int hashCode() {
			return toString().hashCode();
		}

		/**
		 * override Object#equals().
		 */
		@Override
		public boolean equals(Object obj) {
			// 参照先が同じならtrue
			if(this==obj) return true;
			// このクラス(または派生クラス)のPKでないならfalse
			if(!(obj instanceof <%= className %>Base.PK)){
				return false;
			}
			// PK型で受け取る
			<%= className %>Base.PK o = (<%= className %>Base.PK)obj;
			// 各PKを繋いだ文字列で比較する
			return toString().equals(o.toString());
		}

		/**
		 * toString.
		 * PKの各属性を":"で連結して返す。
		 */
		@Override
		public String toString() {
			return <%= writer.writeStringMembersPK() %>;
		}

		/**
		 * Get Map&lt;String, String[]&gt; paramegters from Attributes for HTTP
		 */<%--	 @SuppressWarnings("unchecked") --%>
		public Map&lt;String, String[]&gt; getParameters() {
			return getParameters("");
		}
		@Override
		public Map&lt;String, String[]&gt; getParameters(String prefix) {
			Map&lt;String, String[]&gt; map = new HashMap&lt;String, String[]&gt;();
<%= writer.writeGetParametersPK() %>
			return map;
		}

		/**
		 * Set Attributes from Map&lt;String, String[]&gt; paramegters for HTTP
		 */
		public void setParameters(Map&lt;String, String[]&gt; map){
			setParameters(map, "");
		}
		@Override
		public void setParameters(Map&lt;String, String[]&gt; map, String prefix){
<%= writer.writeSetParametersPK()
%>		}

		/**
		 * Get Map&lt;String, Object&gt; paramegters from Attributes for SQL
		 */<%--	 @SuppressWarnings("unchecked") --%>
		public Map&lt;String, Object&gt; getAttributeMap() {
			Map&lt;String, Object&gt; map = new HashMap&lt;String, Object&gt;();
<%= writer.writeGetAttributeMapPK() %>
			return map;
		}

		// accessors
<%= writer.writeAccesssorPK() %>
	}
}
</pre>
<!--
<%= debugStr %>
-->
</body>
</html>

